# Built-time functionality
# ========================
INPUT_DEVICES="libinput"
L10N="en en-US"
LINGUAS="en en_US"
QEMU_SOFTMMU_TARGETS="x86_64"
QEMU_USER_TARGETS="x86_64"
RUBY_TARGETS="ruby33 ruby32"
USE="adns asm clang compiler-rt cuda dav1d dbus default-compiler-rt drm egl elogind ffmpeg flac fontconfig jpeg jpeg2k jpegxl ktls libglvnd llvm llvm-libunwind lm-sensors lto numa nvdec nvenc nvidia openal opengl openssl orc pgo pipewire png policykit qml qt6 redis savedconfig spice svg svt-av1 threads tiff truetype udev usb vaapi vpx vulkan X zsh-completions \ -cups -geoip -ipv6 -libtirpc -md5 -samba -systemd -qt5"
VIDEO_CARDS="nvidia"
TORCH_CUDA_ARCH_LIST=8.9

# Host and optimization settings
# ==============================
CMAKE_MAKEFILE_GENERATOR=ninja
WARNING_FLAGS="-Werror=odr -Werror=strict-aliasing"
COMMON_FLAGS="-O3 -flto=thin -fno-plt -fno-semantic-interposition -frecord-gcc-switches -march=native -pipe -fplugin=LLVMPolly.so -mllvm=-polly -mllvm=-polly-vectorizer=stripmine -mllvm=-polly-omp-backend=LLVM -mllvm=-polly-parallel -mllvm=-polly-num-threads=9 -mllvm=-polly-scheduling=dynamic ${WARNING_FLAGS}"
CPU_FLAGS_X86="aes avx avx2 avx512_bf16 avx512_bitalg avx512_vbmi2 avx512_vnni avx512_vp2intersect avx512_vpopcntdq avx512bw avx512cd avx512dq avx512f avx512ifma avx512vbmi avx512vl f16c fma3 mmx mmxext pclmul popcnt rdrand sha sse sse2 sse3 sse4_1 sse4_2 sse4a ssse3 vpclmulqdq"
CFLAGS="${COMMON_FLAGS}"
CXXFLAGS="${COMMON_FLAGS}"
FCFLAGS="${COMMON_FLAGS}"
FFLAGS="${COMMON_FLAGS}"
LDFLAGS="-Wl,-O2,--sort-common,--as-needed"
LDFLAGS="${LDFLAGS} -fuse-ld=mold"
CGO_CFLAGS="${COMMON_FLAGS}"
CGO_CXXFLAGS="${COMMON_FLAGS}"
CGO_FCFLAGS="${COMMON_FLAGS}"
CGO_FFLAGS="${COMMON_FLAGS}"
CGO_LDFLAGS="${LDFLAGS}"
MAKEOPTS="-j16"
RUSTFLAGS="-C opt-level=2 -C target-cpu=native -C link-arg=-fuse-ld=mold -Clinker-plugin-lto"

# Compiler
# ========
CC="clang"
CPP="clang-cpp" # necessary for xorg-server and possibly other packages
CXX="clang++"
AR="llvm-ar"
NM="llvm-nm"
RANLIB="llvm-ranlib"

# Advanced Masking
# ================
ACCEPT_KEYWORDS="~amd64"
ACCEPT_LICENSE="*"

# Portage Directories
# ===================
PORTAGE_LOGDIR="/var/log/portage"

# Fetching files
# ==============
source /usr/share/fetchcommandwrapper/make.conf

# Advanced Features
# =================
CLEAN_DELAY=0
EMERGE_DEFAULT_OPTS="-a --ask-enter-invalid --autounmask=n --columns -D --quiet-build=y --quiet-fail=y -v --with-bdeps=y"
FEATURES="parallel-install split-elog split-log userfetch"
# Extremely low priority
#PORTAGE_SCHEDULING_POLICY="idle"
